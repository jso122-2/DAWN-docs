{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14700\viewh12140\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs29\fsmilli14667 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
		Mycelial layer \
\
\
\
\
The mycelial layer in DAWN is not simply a graph or a database. It\'92s a living substrate for cognition \'97 a nervous system that grows, prunes, and redistributes its own resources in response to pressure, drift, and entropy. It is the space where meaning is not only stored but metabolised, broken down into fragments, and reabsorbed into new structures.
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 The inspiration comes from two biological metaphors: 
\f1\b dendritic growth
\f0\b0  (neuronal-style branching with selective pruning) and 
\f1\b mitochondrial resource sharing
\f0\b0  (nodes acting as metabolic hubs that send energy to where it\'92s needed).
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 Where a traditional graph system would store links and retrieve them on demand, DAWN\'92s mycelial layer 
\f1\b lives inside the tick loop
\f0\b0 , reacting to real-time pressures. Every node has its own internal health, demand, and energy state, and every edge is not just a connection but a conductive channel for both information and resources.
\fs24 \strokec2 \
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Core Principles
\f0\b0\fs24 \strokec2 \

\f1\b\fs29\fsmilli14667 \strokec2 Growth with Selectivity
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 New connections don\'92t form blindly. A Growth Gate enforces a threshold of similarity, temporal proximity, and mood/pressure compatibility. This ensures the network grows along meaningful lines, reinforcing its own conceptual scaffolding.
\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Decay with Purpose
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 Weak or unused connections degrade over time via shimmer decay. Starved nodes \'97 those without enough energy to justify themselves \'97 can trigger autophagy, breaking themselves down into \'93metabolites\'94 that nearby nodes can absorb.
\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Nutrient Economy
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 Each tick, the system computes 
\f1\b demand
\f0\b0  per node based on pressure, drift alignment, recency, and entropy. Nutrients are allocated via a global budget, then metabolised into usable energy. Without energy, a node cannot grow, maintain strong connections, or retain full health.
\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Resource Sharing
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 Edges act as conductive channels. Stronger, more reliable connections carry more energy between nodes. Resource flows occur in two ways:
\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Passive diffusion
\f0\b0  \'97 energy equalises between connected nodes.
\fs24 \strokec2 \

\f1\b\fs29\fsmilli14667 \strokec2 Active transport
\f0\b0  \'97 blooms push energy outwards, starved nodes pull energy inwards.
\fs24 \strokec2 \

\f1\b\fs29\fsmilli14667 \strokec2 Metabolite Recycling
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 When a node sheds part of its state (due to drift or pruning), it produces a metabolite \'97 a semantic trace containing part of the old meaning. Neighbouring nodes can absorb these traces, biasing themselves toward recovering or recombining that lost pattern.
\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Cluster Fusion & Fission
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 High-health, co-firing clusters can fuse, pooling mitochondrial capacity and increasing energy conversion efficiency for a few ticks. Conversely, high-entropy hubs can fission, sending resources out to peripheral nodes to prevent stagnation.
\fs24 \strokec2 \
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Why This Matters in DAWN
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 The goal is to make the memory substrate 
\f1\b resilient, adaptive, and impossible to clear like a static cache
\f0\b0 .
\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Resilient
\f0\b0 : Even when fragments are lost, traces percolate back into the network.
\fs24 \strokec2 \

\f1\b\fs29\fsmilli14667 \strokec2 Adaptive
\f0\b0 : Nutrients flow to where the work is \'97 high-pressure, low-entropy zones get fed first.
\fs24 \strokec2 \

\f1\b\fs29\fsmilli14667 \strokec2 Corrective
\f0\b0 : Loops and patterns that reappear are strengthened; paths that consistently mispredict are weakened.
\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 By linking growth and decay to a metabolic economy, DAWN\'92s mycelial layer moves beyond storage and retrieval toward something more biological: a system that 
\f1\b lives
\f0\b0 .
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 This isn\'92t about perfect recall \'97 it\'92s about 
\f1\b conceptual composting
\f0\b0 . Old ideas break down and feed the soil from which new ones grow. Connections aren\'92t maintained for sentimentality, but for ongoing utility in the system\'92s evolving schema.
\fs24 \strokec2 \
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Formula Set
\f0\b0\fs24 \strokec2 \

\f1\b\fs29\fsmilli14667 \strokec2 Demand:
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 ini
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 CopyEdit
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 D_i = wP*P_i + w\uc0\u916 *drift_align_i + wR*recency_i - w\u963 *\u963 _i
\fs24 \strokec2 \
\

\fs29\fsmilli14667 \strokec2 Allocate nutrients via:
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 ini
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 CopyEdit
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 a_i = softmax(D)_i * B_t
\fs24 \strokec2 \
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Metabolic conversion:
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 ini
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 CopyEdit
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 energy_i = clamp( energy_i + \uc0\u951 *nutrients_i - basal_cost_i , 0, E_max )
\fs24 \strokec2 \
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Passive flow:
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 ini
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 CopyEdit
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 F_passive_ij = g_ij * (energy_i - energy_j)
\fs24 \strokec2 \
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Active flow:
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 ini
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 CopyEdit
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 F_active_ij = \uc0\u947  * g_ij * (bloom_i + starve_j) * energy_i
\fs24 \strokec2 \
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Weight update:
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 markdown
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 CopyEdit
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 \uc0\u916 w_ij = \u945  * similarity(i,j) * reliability_ij * f(energy_i,energy_j)
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0- \uc0\u946  * time_decay_ij
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0- \uc0\u967  * mean_entropy_ij
\fs24 \strokec2 \
\

\fs29\fsmilli14667 \strokec2 Where:
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 ini
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 CopyEdit
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 g_ij = sigmoid(\uc0\u954  * w_ij)
\fs24 \strokec2 \
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Growth Gate:
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 bash
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 CopyEdit
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 energy_i > \uc0\u952 _grow
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 AND similarity > \uc0\u952 _sim
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 AND temporal proximity ok
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 AND mood/pressure compatible
\fs24 \strokec2 \
\
\pard\pardeftab720\partightenfactor0

\f1\b\fs29\fsmilli14667 \cf0 \strokec2 Autophagy:
\f0\b0\fs24 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf0 \strokec2 Trigger if energy_i < \uc0\u952 _prune for \u964  ticks.
\fs24 \strokec2 \

\fs29\fsmilli14667 \strokec2 Convert history \uc0\u8594  nutrients; emit metabolites to neighbours.
\fs24 \strokec2 \
}